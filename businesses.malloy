source: naics_code is duckdb.table('./datasets/naics.csv') extend {
    rename: Business_Type is title
    primary_key: ncode
}

source: states is duckdb.table('./datasets/states.csv') extend {
    primary_key: ustate
}

source: businesses is duckdb.table('./datasets/SpokaneCounty-Businesses.csv') extend {
  
    rename: ctype is `Customer Type`

    dimension: Commence_Date is strptime!date(`Commence Date`, '%b-%d-%Y')
    dimension: ReOpen_Date is strptime!date(`Reopen Date`, '%b-%d-%Y')
    dimension: location_city_clean is 
        pick 'SPOKANE VALLEY' when `Location City` = 'CITY OF SPOKANE VALLEY'
        pick 'SPOKANE VALLEY' when `Location City` = 'SPOKANE VLY'
        pick 'SPOKANE VALLEY' when `Location City` = 'SPOKANE VALEY'
        pick 'SPOKANE VALLEY' when `Location City` = 'SPOKANE VALLELY'
        pick 'SPOKANE VALLEY' when `Location City` = 'VALLEY'
        pick 'CHENEY' when `Location City` = 'CHEANEY'
        pick 'LIBERTY LAKE' when `Location City` = 'LIBERY LAKE'
        pick 'NINE MILE FALLS' when `Location City` = 'NINE MILE FLS'
        pick 'FAIRCHILD AIR FORCE BASE' when `Location City` = 'FAIRCHILD AFB'
        pick 'ELK' when `Location City` = 'ELK, WA.'
        pick 'SPOKANE' when `Location City` = 'SPOAKNE'
        pick 'SPOKANE' when `Location City` = 'SPOKEANE'
        else `Location City`

    dimension: outofstate is 
          pick 'Washington' when `Mailing State` = 'WASHINGTON'
          else 'Out of State'
    
    dimension:
        CommenceDate is strptime!date(`Commence Date`,'%b-%d-%Y')
        CeaseDate is strptime!date(`Cease Date`,'%b-%d-%Y')
        ReopenDate is strptime!date(`Reopen Date`,'%b-%d-%Y')  
        YearOpened is CommenceDate.year
        Mailing_City is `Mailing City`
        Mailing_Zip is `Mailing Zip`
        Mailing_County is `Mailing County`
        operation_years is days(CommenceDate to CeaseDate ) / 365
        operation_years1 is days(ReopenDate to CeaseDate) / 365

    measure: 
        total_cus_type is count(ctype)
        total_num_bus is count()
        reopened_after_closing is count() {Where:ReopenDate is not null }
        reopened_businesses is count()
        naics_count is count()

    join_one: naics_code with NAICS
    join_one: states with `Mailing State`

    view: business_by_legal_status is {
        group_by: `Legal Status` is ctype
        aggregate: `Total Businesses` is total_num_bus
        # percent
        `%` is all(total_num_bus,`Legal Status`) / all(total_num_bus)  
        aggregate: `Average Years in Business` is avg(days(CommenceDate to CeaseDate ) / 365)
    
    }

    view: business_by_mailing_address_state is {
        group_by: `Mailing State`
        aggregate: `Total Businesses` is total_num_bus
        # percent
        `%` is all(total_num_bus,`Mailing State`) / all(total_num_bus)  
    }

    view: business_by_business_address_state is {
        group_by: `Location State`
        aggregate: `Total Businesses` is total_num_bus
        # percent
        `%` is all(total_num_bus,`Location State`) / all(total_num_bus)  
    }

    view: business_by_mailing_address_city is {
        group_by: `Mailing City`
        aggregate: `Total Businesses` is total_num_bus
        # percent
        `%` is all(total_num_bus,`Mailing City`) / all(total_num_bus)  
    }

    view: business_by_business_address_city is {
        group_by: `Location City`
        aggregate: `Total Businesses` is total_num_bus
        # percent
        `%` is all(total_num_bus,`Location City`) / all(total_num_bus)  
    }

    view: business_by_year is {
        group_by: `Year Established` is YearOpened
        aggregate: `Total Businesses` is total_num_bus,
        # percent
        `%` is all(total_num_bus,`Year Established`) / all(total_num_bus)  
        calculate: `Annual Change` is (total_num_bus - lag(total_num_bus))
    }

    view: businesses_by_type is {
        group_by:  `Business Type` is naics_code.Business_Type
        aggregate: `Businesses Opened` is naics_count
        # percent
        `% of Total Businesses` is all(total_num_bus,`Business Type`) / all(total_num_bus)  
        aggregate: `Average Years in Business` is avg(days(CommenceDate to CeaseDate ) / 365)
    }

    view: businesses_by_commence_date is {
        group_by: `Business Type` is naics_code.Business_Type, Commence_Date
        order_by: Commence_Date
        limit: 500000
    }

    view: business_types is {
        group_by: `Business Code` is naics_code.ncode, `Business Description` is naics_code.Business_Type,
        aggregate: `Count` is naics_count
        aggregate: `Average Years in Business` is avg(days(CommenceDate to CeaseDate ) / 365)
        limit: 50000
    }
}